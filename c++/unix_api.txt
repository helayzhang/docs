################################################
# #define _GNU_SOURCE
################################################
主要和代码可移植性有关
如果定义了 _GNU_SOURCE
1. 获取很多非标准的GNU/Linux扩展函数
2. 获取很多倍POSIX标准忽略的传统函数（通常都有理由的忽略，例如被更好的选择替换、或和一些特殊的遗留实现关联）
3. 获得一些不可移植的底层函数，但有时你需要实现时使用，比如mount, ifconfig, strfry, memfrob等
4. 破坏一些POSIX标准的函数行为，当GNU不认可标准规范定义的函数行为并决定自己实现一个不同的

不要在场景2 4时使用#define _GNU_SOURCE，当你需要开发可移植性代码时#define _POSIX_C_SOURCE=200809L or #define _XOPEN_SOURCE=700

################################################
# clone()
# int clone(int (*fn)(void *), void *child_stack,
            int flags, void *arg, ...
            /* pid_t *ptid, void *newtls, pid_t *ctid */ );
################################################
创建一个新进程，有点类似fork
