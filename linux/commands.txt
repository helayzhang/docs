=========================
 ps
=========================
    a 显示所有进程（包括其他用户的进程），不包括没有控制终端的进程
    u 
    x 显示没有控制终端的进程
    e
    f 树形显示进程关系


=========================
 top
=========================
    1 显示每个cpu核统计
    l 切换显示平均负载和启动时间信息
    t 切换cpu统计显示
    m 切换内存统计显示
    c 切换显示命令名称和完整命令行
    k 杀进程
    q 退出
    f F 从当前显示中添加或者删除项目
    o O 改变显示项目的顺序
    M 按内存占用排序
    P 按CPU占用排序
    T 根据时间/累计时间进行排序
    W 保存配置

  例子：
    top                     //每隔5秒显式所有进程的资源占用情况
    top -d 2                //每隔2秒显式所有进程的资源占用情况
    top -c                  //每隔5秒显式进程的资源占用情况，并显示进程的命令行参数(默认只有进程名)
    top -p 12345 -p 6789    //每隔5秒显示pid是12345和pid是6789的两个进程的资源占用情况
    top -d 2 -c -p 123456   //每隔2秒显示pid是12345的进程的资源使用情况，并显式该进程启动的命令行参数

  进程
    total 总进程数
    running 运行中进程数
    sleeping 休眠进程数
    stopped 停止进程数
    zombie 僵尸进程数

  CPU(%)
    us 用户空间占用cpu
    sy 系统空间占用cpu
    ni 用户空间内改变过优先级的进程占用cpu
    id 空闲cpu
    wa 等待IO占用的cpu
    hi 硬中断占用的cpu
    si 软中断占用的cpu
    st 虚拟机占用的cpu

  Mem
    total 物理内存总量
    used 使用的内存总量
    free 空闲的内存总量
    buffers 用作内核缓存的内存总量

  Swap
    total 交换区总量
    used 使用的交换区总量
    free 空闲的交换区总量
    cached 缓冲的交换区总量，内存中的内容被换出到交换区，而后又被换入到内存，但使用的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小，相应的内存再次被换出时可不必再对交换区写入。

  PID   进程ID
  PPID  父进程ID
  RUSER Real user name
  UID   进程所有者的用户ID
  USER  进程所有者的用户名
  GROUP 进程所有者的组名
  TTY   启动进程的终端名，不是从终端启动的进程显示？
  PR    优先级
  NI    nice值，负值表示高优先级，正值表示低优先级
  P     最后使用的CPU，仅在多CPU环境下有意义
  %CPU  上次更新到现在的CPU时间占用百分比
  TIME  进程使用的CPU时间总计，单位秒
  TIME+ 进程使用的CPU时间总计，单位1/100秒
  %MEM  进程使用的物理内存百分比
  VIRT  进程使用的虚拟内存总量，单位KB。VIRT=SWAP+RES
  SWAP  进程使用的虚拟内存中，被换出的大小，单位KB
  RES   进程使用的未被换出的物理内存大小，单位KB。RES=CODE+DATA
  CODE  可执行代码占用的物理内存大小，单位KB
  DATA  可执行代码以外的部分（数据段+栈+堆）占用的物理内存大小，单位KB
  SHR   共享内存大小，单位KB
  nFLT  页面错误次数
  nDRT  最后一次写入到现在，被修改过的页面数
  S     进程状态（D=不可中断的睡眠状态，R=运行，S=睡眠，T=跟踪/停止，Z=僵尸进程）
  COMMAND   命令名/命令行
  WCHAN 若该进程在睡眠，则显示睡眠中的系统函数名
  Flags 任务标志，参考sched.h


=========================
 dstat
=========================


